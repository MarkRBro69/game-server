services:
  frontend:
    build:
      context: .
      dockerfile: ./frontend_service/Dockerfile.docker
    env_file:
      - .env.docker
    ports:
      - "8001:8001"
    environment:
      - DOCKER_ENV=True
      - DJANGO_SETTINGS_MODULE=frontend_service.settings
    depends_on:
      - db
      - redis
    networks:
      - game_network

  users:
    build:
      context: .
      dockerfile: ./users_service/Dockerfile.docker
    env_file:
      - .env.docker
    ports:
      - "8002:8002"
    environment:
      - DOCKER_ENV=True
      - DJANGO_SETTINGS_MODULE=users_service.settings
    depends_on:
      - db
      - redis
    networks:
      - game_network

  game:
    build:
      context: .
      dockerfile: ./game_service/Dockerfile.docker
    env_file:
      - .env.docker
    ports:
      - "8003:8003"
    environment:
      - DOCKER_ENV=True
      - DJANGO_SETTINGS_MODULE=game_service.settings
    depends_on:
      - db
      - redis
    networks:
      - game_network

  db:
    image: postgres:latest
    environment:
      POSTGRES_DB: game_users_service
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: Qecz1357
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - game_network

  redis:
    image: redis:alpine
    ports:
      - "6379:6379"
    networks:
      - game_network

volumes:
  postgres_data:

networks:
  game_network:
    driver: bridge
